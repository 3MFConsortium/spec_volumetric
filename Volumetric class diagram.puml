@startuml

title 3MF Volumetric Color & Scalar Fields

package Image
{
    Class Image3D
    {
        id : resourceID
        name : string
        rowcount : int
        colcount : int
        sheetcount : int
    }

    Class Image3DSheet
    {
        path : string (PNG)
    }

    Image3D *-- "1..*" Image3DSheet
}

package ScalarFields
{
    Class ScalarField
    {
        id: resourceID
    }

    Class ComposedScalarField extends ScalarField
    {
        blendmethod : string
        scalarfield1id : resourceID
        scalarfield2id : resourceID
        scalarmaskfieldid : resourceID
        factor1 : double
        factor2 : double
    }

    Class ScalarFieldImage extends ScalarField
    {
        id : resourceID
        image3did : resourceID
        channel : string
        transform: matrix
        filter : string
        valueoffset: double
        valuescale: double
        tilestyleu : string
        tilestylev : string
        tilestylew : string
        default: double
    }

    ComposedScalarField o-- "1..3" ScalarField
    ScalarFieldImage o-- "1" Image3D
}

package ColorFields
{
    Class ColorField
    {
        id: resourceID
    }

    Class ComposedColorField extends ColorField
    {
        blendmethod : string
        colorfield1id : resourceID
        colorfield2id : resourceID
        scalarmaskfieldid : resourceID
        factor1 : double
        factor2 : double
    }

    Class ColorFieldImage extends ColorField
    {
        id : resourceID
        image3did : resourceID
        channel[3] : string
        transform: matrix
        filter : string
        valueoffset: double
        valuescale: double
        tilestyleu : string
        tilestylev : string
        tilestylew : string
        default: double
    }

    ComposedColorField o-- "2" ColorField
    ComposedColorField o-- "0..1 mask" ScalarField
    ColorFieldImage o-- "1" Image3D
}

package VolumetricData
{
    Class VolumeData

    Class Boundary
    {
        transform : matrix
        solid_threshold : double
        scalar_field : resourceID
    }

    Class Color
    {
        transform : matrix
        color_field : resourceID
    }

    Class Property
    {
        name : string
        transform : matrix
        scalar_field : resourceID
    }

    Class Composite
    {
        transform : matrix
    }

    Class MaterialMapping
    {
        scalar_field : resourceID
    }        

    VolumeData *-- "0..1" Boundary
    VolumeData *-- "0..1" Color
    VolumeData *-- "0..1" Property
    VolumeData *-- "0..1" Composite
    Composite *-- "1..*" MaterialMapping

    Boundary o-- "1" ScalarField
    Color o-- "1" ColorField
    Property o-- "1" ScalarField
    MaterialMapping o-- "1" ScalarField
}

Class Mesh
Mesh *-- VolumeData

